{{ $arch := .arch }}
{{ $format := .format }}
{{ $imagename := .imagename }}
{{ $rootfs := .rootfs }}
{{ $size := .size }}
{{ $variant := .variant }}
{{ $zip := .zip }}

architecture: {{ $arch }}

actions:
  - description: "Unpack {{ $rootfs }}"
    action: unpack
    compression: gz
    file: {{ $rootfs }}

  - description: "Setup the disk image"
    action: image-partition
    imagename: {{ $imagename }}.raw
    imagesize: {{ $size }}
    partitiontype: msdos
    partitions:
      - name: root
        fs: ext4
        start: 2048s
        end: 100%
        flags: [ boot ]
    mountpoints:
      - mountpoint: /
        partition: root
        options: [ errors=remount-ro ]

  - action: filesystem-deploy
    setup-kernel-cmdline: false

  - description: "Create a swap file"
    action: run
    chroot: true
    script: scripts/create-swapfile.sh

  - description: "Install the kernel & bootloader"
    action: apt
    recommends: true
    packages: [ grub-pc, linux-image-generic ]

  - description: "Setup GRUB"
    action: run
    chroot: true
    command: update-grub && grub-install "$IMAGE"

  - description: "Install virtualization support for {{ $variant }}"
    action: apt
    recommends: true
  {{ if eq $variant "qemu" }}
    packages: [ qemu-guest-agent, spice-vdagent ]
  {{ else if eq $variant "virtualbox" }}
    packages: [ virtualbox-guest-x11 ]
  {{ else if eq $variant "vmware" }}
    packages: [ open-vm-tools-desktop ]
  {{ else if eq $variant "generic" }}
    packages: [ open-vm-tools-desktop, qemu-guest-agent, spice-vdagent, virtualbox-guest-x11 ]
  {{ end }}

  {{ if eq $variant "vmware" }}
  - description: "Finish install for {{ $variant }}"
    action: run
    chroot: true
    script: scripts/finish-install-vmware.sh
  {{ end }}

  - description: "Configure apt sources.list"
    action: run
    chroot: true
    script: scripts/finish-install.sh apt-sources usergroups

  - description: "Final cleanup (from within)"
    action: run
    chroot: true
    script: scripts/cleanup-in.sh

  - description: "Final cleanup (from outside)"
    action: run
    chroot: false
    script: scripts/cleanup-out.sh

  {{ if eq $format "raw" }}
  - description: "Rename to {{ $imagename }}.img"
    action: run
    postprocess: true
    command: mv -v {{ $imagename }}.raw {{ $imagename }}.img
  {{ else }}
  - description: "Export to a {{ $format }} image"
    label: "export-{{ $format }}"
    action: run
    postprocess: true
    script: scripts/export-{{ $format }}.sh {{ if eq $zip "true" }}-z{{ end }} {{ $imagename }}
  {{ end }}
